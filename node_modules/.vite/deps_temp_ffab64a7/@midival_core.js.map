{
  "version": 3,
  "sources": ["../../../../../../node_modules/@hypersphere/omnibus/src/Registrator.ts", "../../../../../../node_modules/@hypersphere/omnibus/src/Omnibus.ts", "../../../../../../node_modules/@hypersphere/omnibus/src/index.ts", "../../../../../../node_modules/@midival/core/dist/utils/MIDIMessageConvert.js", "../../../../../../node_modules/@midival/core/dist/utils/pitchBend.js", "../../../../../../node_modules/@midival/core/dist/utils/midiCommands.js", "../../../../../../node_modules/@midival/core/dist/utils/midiControlChanges.js", "../../../../../../node_modules/@midival/core/dist/utils/clock.js", "../../../../../../node_modules/@midival/core/dist/errors.js", "../../../../../../node_modules/@midival/core/dist/types/messages.js", "../../../../../../node_modules/@midival/core/dist/MIDIValInput.js", "../../../../../../node_modules/@midival/core/dist/MIDIValOutput.js", "../../../../../../node_modules/@midival/core/dist/wrappers/outputs/BrowserMIDIOutput.js", "../../../../../../node_modules/@midival/core/dist/wrappers/inputs/BrowserMIDIInput.js", "../../../../../../node_modules/@midival/core/dist/wrappers/access/BrowserMIDIAccess.js", "../../../../../../node_modules/@midival/core/dist/MIDIval.js", "../../../../../../node_modules/@midival/core/dist/index.js"],
  "sourcesContent": [null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toMidiMessage = exports.makeMessage = exports.isChannelMode = void 0;\nconst isChannelMode = (channel) => channel >= 120;\nexports.isChannelMode = isChannelMode;\nconst makeMessage = ({ channel, command, data1, data2, }) => {\n    return Uint8Array.from([command + (channel - 1), data1, data2]);\n};\nexports.makeMessage = makeMessage;\nconst toMidiMessage = ([status, data1, data2,]) => {\n    const command = (status >> 4) << 4; // cleaning lower bits\n    const channel = status - command + 1;\n    return {\n        channel,\n        command,\n        data1,\n        data2,\n    };\n};\nexports.toMidiMessage = toMidiMessage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitValueIntoFraction = exports.uIntsIntoNumber = exports.splitNumberIntoUInt8s = exports.fractionToPitchBendAsUints = exports.fractionToPitchBend = void 0;\n// Based on https://sites.uci.edu/camp2014/2014/04/30/managing-midi-pitchbend-messages/\nconst fractionToPitchBend = (n) => {\n    if (n < -1.0 || n > 1.0) {\n        throw new Error(\"Pitch bend value outside the range\");\n    }\n    return Math.ceil(((n + 1) * 16383) / 2);\n};\nexports.fractionToPitchBend = fractionToPitchBend;\nconst fractionToPitchBendAsUints = (n) => {\n    return (0, exports.splitNumberIntoUInt8s)((0, exports.fractionToPitchBend)(n));\n};\nexports.fractionToPitchBendAsUints = fractionToPitchBendAsUints;\nconst splitNumberIntoUInt8s = (n) => {\n    let arr = [];\n    // it's MIDI message so we are using only last 7 bits (first one is always 0).\n    arr[0] = ((1 << 7) - 1) & n;\n    arr[1] = n >> 7;\n    return arr;\n};\nexports.splitNumberIntoUInt8s = splitNumberIntoUInt8s;\nconst uIntsIntoNumber = (arr) => {\n    return arr[0] + (arr[1] << 7);\n};\nexports.uIntsIntoNumber = uIntsIntoNumber;\nconst splitValueIntoFraction = (arr) => {\n    return ((0, exports.uIntsIntoNumber)(arr) / 16363 - 0.5) * 2;\n};\nexports.splitValueIntoFraction = splitValueIntoFraction;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MidiCommand = void 0;\nexports.MidiCommand = {\n    NoteOn: 0b1001 << 4,\n    NoteOff: 0b1000 << 4,\n    PolyKeyPressure: 0b1010 << 4,\n    ControlChange: 0b1011 << 4,\n    ProgramChange: 0b1100 << 4,\n    ChannelPressure: 0b1101 << 4,\n    PitchBend: 0b1110 << 4,\n    Sysex: 0b1111 << 4,\n    Clock: {\n        Start: 0xfa,\n        Continue: 0xfb,\n        Stop: 0xfc,\n        Pulse: 0xf8,\n    },\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MidiControlChange = void 0;\n/**\n * Midi Control Change message types.\n */\nvar MidiControlChange;\n(function (MidiControlChange) {\n    MidiControlChange[MidiControlChange[\"BankSelect\"] = 0] = \"BankSelect\";\n    MidiControlChange[MidiControlChange[\"ModulationWheel\"] = 1] = \"ModulationWheel\";\n    MidiControlChange[MidiControlChange[\"BreathController\"] = 2] = \"BreathController\";\n    MidiControlChange[MidiControlChange[\"FootController\"] = 4] = \"FootController\";\n    MidiControlChange[MidiControlChange[\"PortamentoTile\"] = 5] = \"PortamentoTile\";\n    MidiControlChange[MidiControlChange[\"DataEntryMSB\"] = 6] = \"DataEntryMSB\";\n    MidiControlChange[MidiControlChange[\"ChannelVolume\"] = 7] = \"ChannelVolume\";\n    MidiControlChange[MidiControlChange[\"Balance\"] = 8] = \"Balance\";\n    MidiControlChange[MidiControlChange[\"Pan\"] = 10] = \"Pan\";\n    MidiControlChange[MidiControlChange[\"ExpressionController\"] = 11] = \"ExpressionController\";\n    MidiControlChange[MidiControlChange[\"EffectControl1\"] = 12] = \"EffectControl1\";\n    MidiControlChange[MidiControlChange[\"EffectControl2\"] = 13] = \"EffectControl2\";\n    MidiControlChange[MidiControlChange[\"GeneralPurposeController1\"] = 16] = \"GeneralPurposeController1\";\n    MidiControlChange[MidiControlChange[\"GeneralPurposeController2\"] = 17] = \"GeneralPurposeController2\";\n    MidiControlChange[MidiControlChange[\"GeneralPurposeController3\"] = 18] = \"GeneralPurposeController3\";\n    MidiControlChange[MidiControlChange[\"GeneralPurposeController4\"] = 19] = \"GeneralPurposeController4\";\n    // LSB section\n    MidiControlChange[MidiControlChange[\"BankSelectLSB\"] = 32] = \"BankSelectLSB\";\n    MidiControlChange[MidiControlChange[\"ModulationWheelLSB\"] = 33] = \"ModulationWheelLSB\";\n    MidiControlChange[MidiControlChange[\"BreathControllerLSB\"] = 34] = \"BreathControllerLSB\";\n    MidiControlChange[MidiControlChange[\"FootControllerLSB\"] = 36] = \"FootControllerLSB\";\n    MidiControlChange[MidiControlChange[\"PortamentoTileLSB\"] = 37] = \"PortamentoTileLSB\";\n    MidiControlChange[MidiControlChange[\"DataEntryLSB\"] = 38] = \"DataEntryLSB\";\n    MidiControlChange[MidiControlChange[\"ChannelVolumeLSB\"] = 39] = \"ChannelVolumeLSB\";\n    MidiControlChange[MidiControlChange[\"BalanceLSB\"] = 40] = \"BalanceLSB\";\n    MidiControlChange[MidiControlChange[\"PanLSB\"] = 42] = \"PanLSB\";\n    MidiControlChange[MidiControlChange[\"ExpressionControllerLSB\"] = 43] = \"ExpressionControllerLSB\";\n    MidiControlChange[MidiControlChange[\"EffectControl1LSB\"] = 48] = \"EffectControl1LSB\";\n    MidiControlChange[MidiControlChange[\"EffectControl2LSB\"] = 49] = \"EffectControl2LSB\";\n    MidiControlChange[MidiControlChange[\"EffectControl3LSB\"] = 50] = \"EffectControl3LSB\";\n    MidiControlChange[MidiControlChange[\"EffectControl4LSB\"] = 51] = \"EffectControl4LSB\";\n    // binary ones\n    MidiControlChange[MidiControlChange[\"Sustain\"] = 64] = \"Sustain\";\n    MidiControlChange[MidiControlChange[\"Portamento\"] = 65] = \"Portamento\";\n    MidiControlChange[MidiControlChange[\"Sostenuto\"] = 66] = \"Sostenuto\";\n    MidiControlChange[MidiControlChange[\"SoftPedal\"] = 67] = \"SoftPedal\";\n    MidiControlChange[MidiControlChange[\"LegatoFootswitch\"] = 68] = \"LegatoFootswitch\";\n    MidiControlChange[MidiControlChange[\"Hold2\"] = 69] = \"Hold2\";\n    MidiControlChange[MidiControlChange[\"SoundController1\"] = 70] = \"SoundController1\";\n    MidiControlChange[MidiControlChange[\"SoundController2\"] = 71] = \"SoundController2\";\n    MidiControlChange[MidiControlChange[\"SoundController3\"] = 72] = \"SoundController3\";\n    MidiControlChange[MidiControlChange[\"SoundController4\"] = 73] = \"SoundController4\";\n    MidiControlChange[MidiControlChange[\"SoundController5\"] = 74] = \"SoundController5\";\n    MidiControlChange[MidiControlChange[\"SoundController6\"] = 75] = \"SoundController6\";\n    MidiControlChange[MidiControlChange[\"SoundController7\"] = 76] = \"SoundController7\";\n    MidiControlChange[MidiControlChange[\"SoundController8\"] = 77] = \"SoundController8\";\n    MidiControlChange[MidiControlChange[\"SoundController9\"] = 78] = \"SoundController9\";\n    MidiControlChange[MidiControlChange[\"SoundController10\"] = 79] = \"SoundController10\";\n    /* Alternative names for 70-78 */\n    MidiControlChange[MidiControlChange[\"SoundVariation\"] = 70] = \"SoundVariation\";\n    MidiControlChange[MidiControlChange[\"TimbreIntensitivity\"] = 71] = \"TimbreIntensitivity\";\n    MidiControlChange[MidiControlChange[\"ReleaseTime\"] = 72] = \"ReleaseTime\";\n    MidiControlChange[MidiControlChange[\"AttackTime\"] = 73] = \"AttackTime\";\n    MidiControlChange[MidiControlChange[\"Brightness\"] = 74] = \"Brightness\";\n    MidiControlChange[MidiControlChange[\"DecayTime\"] = 75] = \"DecayTime\";\n    MidiControlChange[MidiControlChange[\"VibratoRate\"] = 76] = \"VibratoRate\";\n    MidiControlChange[MidiControlChange[\"VibratoDepth\"] = 77] = \"VibratoDepth\";\n    MidiControlChange[MidiControlChange[\"VibratoDelay\"] = 78] = \"VibratoDelay\";\n    MidiControlChange[MidiControlChange[\"GeneralPurposeController5\"] = 80] = \"GeneralPurposeController5\";\n    MidiControlChange[MidiControlChange[\"GeneralPurposeController6\"] = 81] = \"GeneralPurposeController6\";\n    MidiControlChange[MidiControlChange[\"GeneralPurposeController7\"] = 82] = \"GeneralPurposeController7\";\n    MidiControlChange[MidiControlChange[\"GeneralPurposeController8\"] = 83] = \"GeneralPurposeController8\";\n    MidiControlChange[MidiControlChange[\"PortamentoControl\"] = 84] = \"PortamentoControl\";\n    MidiControlChange[MidiControlChange[\"HighResolutionVelocityPrefix\"] = 88] = \"HighResolutionVelocityPrefix\";\n    MidiControlChange[MidiControlChange[\"Effects1Depth\"] = 91] = \"Effects1Depth\";\n    MidiControlChange[MidiControlChange[\"Effects2Depth\"] = 92] = \"Effects2Depth\";\n    MidiControlChange[MidiControlChange[\"Effects3Depth\"] = 93] = \"Effects3Depth\";\n    MidiControlChange[MidiControlChange[\"Effects4Depth\"] = 94] = \"Effects4Depth\";\n    MidiControlChange[MidiControlChange[\"Effects5Depth\"] = 95] = \"Effects5Depth\";\n    MidiControlChange[MidiControlChange[\"DataIncrement\"] = 96] = \"DataIncrement\";\n    MidiControlChange[MidiControlChange[\"DataDecrement\"] = 97] = \"DataDecrement\";\n    MidiControlChange[MidiControlChange[\"NonRegisteredParameterNumberLSB\"] = 98] = \"NonRegisteredParameterNumberLSB\";\n    MidiControlChange[MidiControlChange[\"NonRegisteredParameterNumberMSB\"] = 99] = \"NonRegisteredParameterNumberMSB\";\n    MidiControlChange[MidiControlChange[\"RegisteredParameterNumberLSB\"] = 100] = \"RegisteredParameterNumberLSB\";\n    MidiControlChange[MidiControlChange[\"RegisteredParameterNumberMSB\"] = 101] = \"RegisteredParameterNumberMSB\";\n    // Channel Mode messages\n    MidiControlChange[MidiControlChange[\"AllSoundsOff\"] = 120] = \"AllSoundsOff\";\n    MidiControlChange[MidiControlChange[\"ResetAllControllers\"] = 121] = \"ResetAllControllers\";\n    MidiControlChange[MidiControlChange[\"LocalControlOnOff\"] = 122] = \"LocalControlOnOff\";\n    MidiControlChange[MidiControlChange[\"AllNotesOff\"] = 123] = \"AllNotesOff\";\n    MidiControlChange[MidiControlChange[\"OmniModeOff\"] = 124] = \"OmniModeOff\";\n    MidiControlChange[MidiControlChange[\"OmniModeOn\"] = 125] = \"OmniModeOn\";\n    MidiControlChange[MidiControlChange[\"MonoModeOn\"] = 126] = \"MonoModeOn\";\n    MidiControlChange[MidiControlChange[\"PolyModeOn\"] = 127] = \"PolyModeOn\";\n})(MidiControlChange = exports.MidiControlChange || (exports.MidiControlChange = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ticksToBPM = exports.quarternoteToBPM = exports.averageIntervals = exports.computeIntervalsInMs = void 0;\nconst sum = (a, b) => a + b;\nconst computeIntervalsInMs = (ticks) => {\n    const results = [];\n    for (let i = 1; i < ticks.length; i++) {\n        results.push(ticks[i] - ticks[i - 1]);\n    }\n    return results;\n};\nexports.computeIntervalsInMs = computeIntervalsInMs;\nconst averageIntervals = (differences) => {\n    if (!differences || !differences.length) {\n        return 0;\n    }\n    return differences.reduce(sum) / differences.length;\n};\nexports.averageIntervals = averageIntervals;\nconst quarternoteToBPM = (interval) => {\n    return 60000 / (interval * 24);\n};\nexports.quarternoteToBPM = quarternoteToBPM;\nconst ticksToBPM = (ticks) => {\n    if (!ticks || ticks.length < 2) {\n        return 0;\n    }\n    return (0, exports.quarternoteToBPM)((0, exports.averageIntervals)((0, exports.computeIntervalsInMs)(ticks)));\n};\nexports.ticksToBPM = ticksToBPM;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MIDIValConfigurationError = exports.MIDIValError = void 0;\nclass MIDIValError extends Error {\n    constructor(message) {\n        super(message);\n    }\n    get name() {\n        return this.constructor.name;\n    }\n}\nexports.MIDIValError = MIDIValError;\nclass MIDIValConfigurationError extends MIDIValError {\n}\nexports.MIDIValConfigurationError = MIDIValConfigurationError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toProgramMessage = exports.toControlChangeMessage = exports.toNoteMessage = void 0;\nconst toNoteMessage = (m) => (Object.assign(Object.assign({}, m), { note: m.data1, velocity: m.data2 }));\nexports.toNoteMessage = toNoteMessage;\nconst toControlChangeMessage = (m) => (Object.assign(Object.assign({}, m), { control: m.data1, value: m.data2 }));\nexports.toControlChangeMessage = toControlChangeMessage;\nconst toProgramMessage = (m) => (Object.assign(Object.assign({}, m), { program: m.data1, value: m.data2 }));\nexports.toProgramMessage = toProgramMessage;\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MIDIValInput = void 0;\nconst omnibus_1 = require(\"@hypersphere/omnibus\");\nconst MIDIMessageConvert_1 = require(\"./utils/MIDIMessageConvert\");\nconst index_1 = require(\"./index\");\nconst pitchBend_1 = require(\"./utils/pitchBend\");\nconst midiCommands_1 = require(\"./utils/midiCommands\");\nconst midiControlChanges_1 = require(\"./utils/midiControlChanges\");\nconst clock_1 = require(\"./utils/clock\");\nconst errors_1 = require(\"./errors\");\nconst messages_1 = require(\"./types/messages\");\nconst TEMPO_SAMPLES_LIMIT = 20;\nconst DefaultOptions = {\n    computeClockTempo: false,\n};\nclass MIDIValInput {\n    constructor(input, options = DefaultOptions) {\n        this.omnibus = new omnibus_1.Omnibus();\n        this.tempoSamples = [];\n        this.registerInput(input);\n        this.options = options;\n    }\n    /**\n     * Returns new MIDIValInput object based on the interface id.\n     * @param interfaceId id of the interface from the MIDIAcces object.\n     * @throws MIDIValError when interface id is not found.\n     * @returns Promise resolving to MIDIValInput.\n     */\n    static fromInterfaceId(interfaceId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const midiAccess = yield this.getMidiAccess();\n            const input = midiAccess.inputs.find(({ id }) => id === interfaceId);\n            if (!input) {\n                throw new errors_1.MIDIValError(`${interfaceId} not found`);\n            }\n            return new MIDIValInput(input, options);\n        });\n    }\n    /**\n     * Finds first interface matching the name\n     * @param interfaceName interface Name\n     * @param options input configuration options\n     * @throws MIDIValError when no interface with that name is found\n     * @returns MIDIValInput object\n     */\n    static fromInterfaceName(interfaceName, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const midiAccess = yield this.getMidiAccess();\n            const input = midiAccess.inputs.find(({ name }) => name === interfaceName);\n            if (!input) {\n                throw new errors_1.MIDIValError(`${interfaceName} not found`);\n            }\n            return new MIDIValInput(input, options);\n        });\n    }\n    static getMidiAccess() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const midiAccess = yield index_1.MIDIVal.connect();\n            return midiAccess;\n        });\n    }\n    /**\n     * Current MIDI Clock tempo\n     * @throws MIDIValConfigurationError when computeClockTempo is not on.\n     * @returns current tempo in BPM.\n     */\n    get tempo() {\n        if (!this.options.computeClockTempo) {\n            throw new errors_1.MIDIValConfigurationError(\"To use MIDIValInput.tempo you need to enable computeClockTempo option.\");\n        }\n        return (0, clock_1.ticksToBPM)(this.tempoSamples);\n    }\n    registerInput(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.midiInput = input;\n            this.unregisterInput = yield input.onMessage((e) => {\n                if (e.data[0] === 0xf0) {\n                    // sysex\n                    this.omnibus.trigger(\"sysex\", e.data);\n                    return;\n                }\n                if (this.isClockCommand(e)) {\n                    return;\n                }\n                const midiMessage = (0, MIDIMessageConvert_1.toMidiMessage)(e.data);\n                switch (midiMessage.command) {\n                    case midiCommands_1.MidiCommand.NoteOn:\n                        this.omnibus.trigger(\"noteOn\", (0, messages_1.toNoteMessage)(midiMessage));\n                        break;\n                    case midiCommands_1.MidiCommand.NoteOff:\n                        this.omnibus.trigger(\"noteOff\", (0, messages_1.toNoteMessage)(midiMessage));\n                        break;\n                    case midiCommands_1.MidiCommand.ControlChange:\n                        this.omnibus.trigger(\"controlChange\", (0, messages_1.toControlChangeMessage)(midiMessage));\n                        break;\n                    case midiCommands_1.MidiCommand.ProgramChange:\n                        this.omnibus.trigger(\"programChange\", (0, messages_1.toProgramMessage)(midiMessage));\n                        break;\n                    case midiCommands_1.MidiCommand.PolyKeyPressure:\n                        this.omnibus.trigger(\"polyKeyPressure\", midiMessage);\n                        break;\n                    case midiCommands_1.MidiCommand.PitchBend:\n                        this.omnibus.trigger(\"pitchBend\", (0, pitchBend_1.splitValueIntoFraction)([midiMessage.data1, midiMessage.data2]));\n                        break;\n                    default:\n                        // TODO: Unknown message.\n                        console.log(\"unknown msg\", midiMessage);\n                        break;\n                }\n            });\n            if (this.options.computeClockTempo) {\n                this.onClockPulse(() => {\n                    // compute time\n                    this.tempoSamples.push(performance.now());\n                    if (this.tempoSamples.length > TEMPO_SAMPLES_LIMIT) {\n                        this.tempoSamples.shift();\n                    }\n                });\n                const resetSamples = () => {\n                    this.tempoSamples = [];\n                };\n                this.onClockContinue(resetSamples);\n                this.onClockStart(resetSamples);\n            }\n        });\n    }\n    isClockCommand(e) {\n        switch (e.data[0]) {\n            case midiCommands_1.MidiCommand.Clock.Pulse:\n                this.omnibus.trigger(\"clockPulse\");\n                return true;\n            case midiCommands_1.MidiCommand.Clock.Start:\n                this.omnibus.trigger(\"clockStart\");\n                return true;\n            case midiCommands_1.MidiCommand.Clock.Continue:\n                this.omnibus.trigger(\"clockContinue\");\n                return true;\n            case midiCommands_1.MidiCommand.Clock.Stop:\n                this.omnibus.trigger(\"clockStop\");\n                return true;\n            default:\n                return false;\n        }\n    }\n    onBusKeyValue(event, key, value, callback) {\n        return this.omnibus.on(event, (...args) => {\n            if (!args.length) {\n                return;\n            }\n            const obj = args[0];\n            // FIXME: how to do it so we have multiple args?\n            if (obj[key] === value) {\n                callback(obj);\n            }\n        });\n    }\n    /**\n     * Disconnects all listeners.\n     */\n    disconnect() {\n        this.omnibus.offAll();\n        if (this.unregisterInput) {\n            this.unregisterInput();\n        }\n    }\n    /**\n     * Registers new callback on every note on event.\n     * @param callback Callback that will get called on each note on event.\n     * @returns Callback to unregister.\n     */\n    onAllNoteOn(callback) {\n        return this.omnibus.on(\"noteOn\", callback);\n    }\n    /**\n     * Registers new callback on specific note on event.\n     * @param key the key number\n     * @param callback Callback that gets called on every note on on this specific key\n     * @returns Callback to unregister.\n     */\n    onNoteOn(key, callback) {\n        return this.omnibus.on(\"noteOn\", (midiMessage) => {\n            if (midiMessage.note !== key) {\n                return;\n            }\n            return callback(midiMessage);\n        });\n    }\n    /**\n     * Registers new callback on all notes off.\n     * @param callback Callback that gets called on every note off.\n     * @returns Unregister callback\n     */\n    onAllNoteOff(callback) {\n        return this.omnibus.on(\"noteOff\", callback);\n    }\n    /**\n     * Registers new callback on specific note off.\n     * @param key key number\n     * @param callback Callback that gets called on every note off on this specific key\n     * @returns Unregister callback\n     */\n    onNoteOff(key, callback) {\n        return this.onBusKeyValue(\"noteOff\", \"note\", key, callback);\n    }\n    /**\n     * Registers new callback on pitch bend message\n     * @param callback Callback that gets called on every pitch bend message. It gets value of the bend in the range of -1.0 to 1.0 using 16-bit precision (if supported by sending device).\n     * @returns Unregister callback.\n     */\n    onPitchBend(callback) {\n        return this.omnibus.on(\"pitchBend\", callback);\n    }\n    /**\n     * Registers callback on every control change message\n     * @param callback Callback that will get called on control change.\n     * @returns Unregister callback.\n     */\n    onAllControlChange(callback) {\n        return this.omnibus.on(\"controlChange\", callback);\n    }\n    /**\n     * Registers callback on specific control change key.\n     * @param channel Control change channel value\n     * @param callback Callback to be called\n     * @returns Unregister function\n     */\n    onControlChange(control, callback) {\n        if ((0, MIDIMessageConvert_1.isChannelMode)(control)) {\n            console.warn(\"use designated Channel Mode callback instead of onControlChange for \" +\n                control);\n        }\n        return this.omnibus.on(\"controlChange\", (m) => {\n            if (m.control !== control) {\n                return;\n            }\n            callback(m);\n        });\n    }\n    /**\n     * Registers callback to be called on every program change event\n     * @param callback Callback to be called\n     * @returns Unregister function.\n     */\n    onAllProgramChange(callback) {\n        return this.omnibus.on(\"programChange\", callback);\n    }\n    /**\n     * Registers callback to be called on specific program change\n     * @param key Program value for key change\n     * @param callback Callback to be called\n     * @returns Unregister function\n     */\n    onProgramChange(program, callback) {\n        return this.onBusKeyValue(\"programChange\", \"program\", program, callback);\n    }\n    /**\n     * Registers callback on all poly key pressure events\n     * @param callback Callback to be called\n     * @returns Unregister function\n     */\n    onAllPolyKeyPressure(callback) {\n        return this.omnibus.on(\"polyKeyPressure\", callback);\n    }\n    /**\n     * Registers callback on specific poly key pressure event\n     * @param key Key for poly key pressure\n     * @param callback Callback to be called\n     * @returns Unregister function\n     */\n    onPolyKeyPressure(key, callback) {\n        return this.onBusKeyValue(\"polyKeyPressure\", \"data1\", key, callback);\n    }\n    /**\n     * Registers callback on sysex message\n     * @param callback Callback to be called\n     * @returns Unregister callback\n     */\n    onSysex(callback) {\n        return this.omnibus.on(\"sysex\", callback);\n    }\n    /**\n     * Registers callback on all sounds off event\n     * @param callback Callback to be called\n     * @returns Unregister callback\n     */\n    onAllSoundsOff(callback) {\n        return this.onBusKeyValue(\"controlChange\", \"control\", midiControlChanges_1.MidiControlChange.AllSoundsOff, callback);\n    }\n    /**\n     * Registers callback on reset all controllers event\n     * @param callback Callback to be called\n     * @returns Unregister callback\n     */\n    onResetAllControllers(callback) {\n        return this.onBusKeyValue(\"controlChange\", \"control\", midiControlChanges_1.MidiControlChange.ResetAllControllers, callback);\n    }\n    /**\n     * Registers callback on local control change event\n     * @param callback Callback to be called: first argument to the callback is a boolean representing if the local control was set on or off\n     * @returns Unregister event\n     */\n    onLocalControlChange(callback) {\n        return this.onBusKeyValue(\"controlChange\", \"control\", midiControlChanges_1.MidiControlChange.LocalControlOnOff, (m) => {\n            callback(m.data2 === 127, m);\n        });\n    }\n    /**\n     * Registers callback on all notes off\n     * @param callback Callback to be called\n     * @returns Unregister callback\n     */\n    onAllNotesOff(callback) {\n        return this.onBusKeyValue(\"controlChange\", \"control\", midiControlChanges_1.MidiControlChange.AllNotesOff, callback);\n    }\n    onOmniModeOff(callback) {\n        return this.onBusKeyValue(\"controlChange\", \"control\", midiControlChanges_1.MidiControlChange.OmniModeOff, callback);\n    }\n    onOmniModeOn(callback) {\n        return this.onBusKeyValue(\"controlChange\", \"control\", midiControlChanges_1.MidiControlChange.OmniModeOn, callback);\n    }\n    onMonoModeOn(callback) {\n        return this.onBusKeyValue(\"controlChange\", \"control\", midiControlChanges_1.MidiControlChange.MonoModeOn, callback);\n    }\n    onPolyModeOn(callback) {\n        return this.onBusKeyValue(\"controlChange\", \"control\", midiControlChanges_1.MidiControlChange.PolyModeOn, callback);\n    }\n    onClockPulse(callback) {\n        return this.omnibus.on(\"clockPulse\", callback);\n    }\n    onClockStart(callback) {\n        return this.omnibus.on(\"clockStart\", callback);\n    }\n    onClockStop(callback) {\n        return this.omnibus.on(\"clockStop\", callback);\n    }\n    onClockContinue(callback) {\n        return this.omnibus.on(\"clockContinue\", callback);\n    }\n}\nexports.MIDIValInput = MIDIValInput;\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MIDIValOutput = void 0;\nconst index_1 = require(\"./index\");\nconst pitchBend_1 = require(\"./utils/pitchBend\");\nconst midiCommands_1 = require(\"./utils/midiCommands\");\nconst midiControlChanges_1 = require(\"./utils/midiControlChanges\");\nclass MIDIValOutput {\n    constructor(output) {\n        this.midiOutput = output;\n        this.defaultChannel = 1;\n    }\n    /**\n     * Sends raw message to MIDI out\n     * @param msgs Message as an array of UInt8 values\n     * @returns\n     */\n    send(msgs) {\n        if (!this.midiOutput) {\n            return;\n        }\n        this.midiOutput.send(msgs);\n    }\n    /**\n     * Changes default channel the messages are sent on\n     * @param channel Channel value. Integer between 1 and 16\n     */\n    setChannel(channel) {\n        this.defaultChannel = channel;\n    }\n    getChannel(channel) {\n        if (!channel) {\n            return this.defaultChannel - 1;\n        }\n        return channel - 1;\n    }\n    /**\n     * Creates MIDIValOutput based on the interface name\n     * @param interfaceName Name of the interface\n     * @returns MIDIValOutput object\n     */\n    static fromInterfaceName(interfaceName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const midiAccess = yield this.getMidiAccess();\n            const output = midiAccess.outputs.find(({ name }) => name === interfaceName);\n            if (!output) {\n                throw new Error(`${interfaceName} not found`);\n            }\n            return new MIDIValOutput(output);\n        });\n    }\n    static getMidiAccess() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const midiAccess = yield index_1.MIDIVal.connect();\n            return midiAccess;\n        });\n    }\n    /**\n     * Sends note on message\n     * @param note Note key value to be sent.\n     * @param velocity Velocity - number between 0 and 128\n     * @param channel Channel. By default will use channel set by setChannel method\n     * @returns\n     */\n    sendNoteOn(note, velocity, channel) {\n        return this.send([\n            midiCommands_1.MidiCommand.NoteOn + this.getChannel(channel),\n            note,\n            velocity,\n        ]);\n    }\n    /**\n     * Sends note off message.\n     * @param note Note key to be set off\n     * @param channel Channel. By default will use channel set by setChannel method\n     * @returns\n     */\n    sendNoteOff(note, channel) {\n        return this.send([midiCommands_1.MidiCommand.NoteOff + this.getChannel(channel), note, 0]);\n    }\n    sendPolyKeyPressure(key, velocity, channel) {\n        return this.send([\n            midiCommands_1.MidiCommand.PolyKeyPressure + this.getChannel(channel),\n            key,\n            velocity,\n        ]);\n    }\n    sendControlChange(controller, value, channel) {\n        // FIXME: channel mode check here\n        return this.send([\n            midiCommands_1.MidiCommand.ControlChange + this.getChannel(channel),\n            controller,\n            value,\n        ]);\n    }\n    sendProgramChange(program, channel) {\n        return this.send([\n            midiCommands_1.MidiCommand.ProgramChange + this.getChannel(channel),\n            program,\n        ]);\n    }\n    sendChannelPressure(velocity, channel) {\n        return this.send([\n            midiCommands_1.MidiCommand.ChannelPressure + this.getChannel(channel),\n            velocity,\n        ]);\n    }\n    /**\n     * Sends pitch bend value.\n     * @param bendValue Ben value ranging from -1.0 to 1.0.\n     * @param channel Optional channel on which bend should be sent on\n     * @returns\n     * @throws Throws exception if bendValue is outside the range.\n     */\n    sendPitchBend(bendValue, channel) {\n        return this.send(new Uint8Array([\n            midiCommands_1.MidiCommand.PitchBend + this.getChannel(channel),\n            ...(0, pitchBend_1.fractionToPitchBendAsUints)(bendValue),\n        ]));\n    }\n    // Special Channel Modes\n    sendAllSoundOff(channel) {\n        return this.send([\n            midiCommands_1.MidiCommand.ControlChange + this.getChannel(channel),\n            midiControlChanges_1.MidiControlChange.AllSoundsOff,\n            0,\n        ]);\n    }\n    sendResetAllControllers(channel) {\n        // v = x: Value must only be zero unless otherwise allowed in a specific Recommended Practice.\n        return this.send([\n            midiCommands_1.MidiCommand.ControlChange + this.getChannel(channel),\n            midiControlChanges_1.MidiControlChange.ResetAllControllers,\n            0,\n        ]);\n    }\n    sendLocalControlOff(channel) {\n        return this.send([\n            midiCommands_1.MidiCommand.ControlChange + this.getChannel(channel),\n            midiControlChanges_1.MidiControlChange.LocalControlOnOff,\n            0,\n        ]);\n    }\n    sendLocalControlOn(channel) {\n        return this.send([\n            midiCommands_1.MidiCommand.ControlChange + this.getChannel(channel),\n            midiControlChanges_1.MidiControlChange.LocalControlOnOff,\n            127,\n        ]);\n    }\n    sendAllNotesOff(channel) {\n        return this.send([\n            midiCommands_1.MidiCommand.ControlChange + this.getChannel(channel),\n            midiControlChanges_1.MidiControlChange.AllNotesOff,\n            0,\n        ]);\n    }\n    sendClockStart() {\n        return this.send([midiCommands_1.MidiCommand.Clock.Start]);\n    }\n    sendClockStop() {\n        return this.send([midiCommands_1.MidiCommand.Clock.Stop]);\n    }\n    sendClockContinue() {\n        return this.send([midiCommands_1.MidiCommand.Clock.Continue]);\n    }\n    sendClockPulse() {\n        return this.send([midiCommands_1.MidiCommand.Clock.Pulse]);\n    }\n}\nexports.MIDIValOutput = MIDIValOutput;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserMIDIOutput = void 0;\nclass BrowserMIDIOutput {\n    constructor(output) {\n        this.output = output;\n    }\n    send(data) {\n        this.output.send(data);\n    }\n    get id() {\n        return this.output.id;\n    }\n    get name() {\n        return this.output.name;\n    }\n    get manufacturer() {\n        return this.output.manufacturer;\n    }\n}\nexports.BrowserMIDIOutput = BrowserMIDIOutput;\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserMIDIInput = void 0;\nclass BrowserMIDIInput {\n    constructor(input) {\n        this.input = input;\n    }\n    onMessage(fn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.input.open();\n            this.input.addEventListener(\"midimessage\", fn);\n            return () => {\n                this.input.removeEventListener(\"midimessage\", fn);\n            };\n        });\n    }\n    get id() {\n        return this.input.id;\n    }\n    get name() {\n        return this.input.name;\n    }\n    get manufacturer() {\n        return this.input.manufacturer;\n    }\n}\nexports.BrowserMIDIInput = BrowserMIDIInput;\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserMIDIAccess = void 0;\nconst BrowserMIDIOutput_1 = require(\"../outputs/BrowserMIDIOutput\");\nconst BrowserMIDIInput_1 = require(\"../inputs/BrowserMIDIInput\");\nconst omnibus_1 = require(\"@hypersphere/omnibus\");\nclass BrowserMIDIAccess {\n    constructor() {\n        this.bus = new omnibus_1.Omnibus();\n    }\n    onInputConnected(callback) {\n        return this.bus.on(\"inputConnected\", callback);\n    }\n    onInputDisconnected(callback) {\n        return this.bus.on(\"inputDisconnected\", callback);\n    }\n    onOutputConnected(callback) {\n        return this.bus.on(\"outputConnected\", callback);\n    }\n    onOutputDisconnected(callback) {\n        return this.bus.on(\"outputDisconnected\", callback);\n    }\n    connect(sysex = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!navigator.requestMIDIAccess) {\n                throw new Error(\"requestMIDIAccess not available, make sure you are using MIDI-compatible browser.\");\n            }\n            this.access = yield navigator.requestMIDIAccess({ sysex }); // FIXME: check.\n            this.listenOnStateChange();\n        });\n    }\n    get outputs() {\n        // FIXME: guard to be called after succesful connect.\n        return Array.from(this.access.outputs).map(([, output]) => new BrowserMIDIOutput_1.BrowserMIDIOutput(output));\n    }\n    get inputs() {\n        // FIXME: guard to be called after succesful connect.\n        return Array.from(this.access.inputs).map(([, input]) => new BrowserMIDIInput_1.BrowserMIDIInput(input));\n    }\n    getInputById(inputId) {\n        const input = Array.from(this.access.inputs)\n            .map(([, input]) => input)\n            .find(({ id }) => id === inputId);\n        if (!input) {\n            throw new Error(`Cannot find input ${inputId}`);\n        }\n        return new BrowserMIDIInput_1.BrowserMIDIInput(input);\n    }\n    getOutputById(outputId) {\n        const output = Array.from(this.access.outputs)\n            .map(([, output]) => output)\n            .find(({ id }) => id === outputId);\n        if (!output) {\n            throw new Error(`Cannot find output ${outputId}`);\n        }\n        return new BrowserMIDIOutput_1.BrowserMIDIOutput(output);\n    }\n    listenOnStateChange() {\n        this.access.addEventListener(\"statechange\", (e) => {\n            if (e.port.type === \"input\") {\n                switch (e.port.state) {\n                    case \"disconnected\":\n                        this.bus.trigger(\"inputDisconnected\", new BrowserMIDIInput_1.BrowserMIDIInput(e.port));\n                        break;\n                    case \"connected\":\n                        this.bus.trigger(\"inputConnected\", new BrowserMIDIInput_1.BrowserMIDIInput(e.port));\n                        break;\n                }\n            }\n            else {\n                switch (e.port.state) {\n                    case \"disconnected\":\n                        this.bus.trigger(\"outputDisconnected\", new BrowserMIDIOutput_1.BrowserMIDIOutput(e.port));\n                        break;\n                    case \"connected\":\n                        this.bus.trigger(\"outputConnected\", new BrowserMIDIOutput_1.BrowserMIDIOutput(e.port));\n                        break;\n                }\n            }\n        });\n    }\n}\nexports.BrowserMIDIAccess = BrowserMIDIAccess;\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MIDIVal = exports.matchesConfig = void 0;\nconst MIDIValInput_1 = require(\"./MIDIValInput\");\nconst MIDIValOutput_1 = require(\"./MIDIValOutput\");\nconst BrowserMIDIAccess_1 = require(\"./wrappers/access/BrowserMIDIAccess\");\nconst matchesConfig = (input, scheme) => {\n    return Object.keys(scheme).reduce((acc, key) => {\n        const val = scheme[key];\n        if (typeof val === \"string\") {\n            return acc && input[key] === val;\n        }\n        else {\n            return acc && val.test(input[key]);\n        }\n    }, true);\n};\nexports.matchesConfig = matchesConfig;\nclass MIDIVal {\n    /**\n     * Allows to reconfigure access object to use project in different environment as the default one (browser): See @midival/node, @midival/react-native for more details.\n     * @param newAccess Implementation of IMIDIAccess to be used to provide MIDI objects.\n     */\n    static configureAccessObject(newAccess) {\n        this.isSetupComplete = false;\n        this.accessObject = newAccess;\n    }\n    /**\n     * Calls callback on every input device that gets connected.\n     * @param callback Callback to be registered\n     * @param callOnAlreadyConnected If set to true, the function will instantly trigger for all already connected devices. Default to false\n     * @returns Promise resolving to unregister callback when finishes.\n     */\n    static onInputDeviceConnected(callback, callOnAlreadyConnected = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (callOnAlreadyConnected) {\n                this.accessObject.inputs.forEach(callback);\n            }\n            return this.accessObject.onInputConnected(callback);\n        });\n    }\n    /**\n     * Listens to all input devices with a certain config (like name or manufacturer). Configuration can be provided as a string or regex. The callback unlike `onInputDeviceConnected` accepts MIDIValInput. `onInputDeviceConnected` is suitable when you want to filter devices yourself, beyond this configuration object so it does not instantiate objects.\n     * @param config Configuration object used to match with device connected\n     * @param fn Callback on connection. Connection is already wrapped in MIDIValInput object\n     * @returns Promise for Unregister Callback\n     */\n    static onInputDeviceWithConfigConnected(config, fn, callOnAlreadyConnected = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.onInputDeviceConnected((input) => {\n                if ((0, exports.matchesConfig)(input, config)) {\n                    fn(new MIDIValInput_1.MIDIValInput(input));\n                }\n            }, callOnAlreadyConnected);\n        });\n    }\n    /**\n     * Listens to all output devices with a certain config (like name or manufacturer). Configuration can be provided as a string or regex. The callback unlike `onOutputDeviceConnected` accepts MIDIValOutput. `onOutputDeviceConnected` is suitable when you want to filter devices yourself, beyond this configuration object so it does not instantiate objects.\n     * @param config Configuration object used to match with device connected\n     * @param fn Callback on connection. Connection is already wrapped in MIDIValOutput object\n     * @returns Promise for Unregister Callback\n     */\n    static onOutputDeviceWithConfigConnected(config, fn, callOnAlreadyConnected = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.onOutputDeviceConnected((output) => {\n                if ((0, exports.matchesConfig)(output, config)) {\n                    fn(new MIDIValOutput_1.MIDIValOutput(output));\n                }\n            }, callOnAlreadyConnected);\n        });\n    }\n    /**\n     * Calls callback on every output device that gets connected.\n     * @param callback Callback to be registered\n     * @param callOnAlreadyConnected If set to true, the function will instantly trigger for all already connected devices. Default to false\n     * @returns Promise resolving to unregister callback when finishes.\n     */\n    static onOutputDeviceConnected(callback, callOnAlreadyConnected = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (callOnAlreadyConnected) {\n                this.accessObject.outputs.forEach(callback);\n            }\n            return this.accessObject.onOutputConnected(callback);\n        });\n    }\n    /**\n     * Regusters callback on an event of input device being disconnected.\n     * @param callback Callback to be called.\n     * @returns promise resolving to unregister callback\n     */\n    static onInputDeviceDisconnected(callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.accessObject.onInputDisconnected(callback);\n        });\n    }\n    /**\n     * Regusters callback on an event of input device being disconnected.\n     * @param callback Callback to be called.\n     * @returns promise resolving to unregister callback\n     */\n    static onOutputDeviceDisconnected(callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.accessObject.onOutputDisconnected(callback);\n        });\n    }\n    /**\n     * Creates MIDIValInput instance from implementation of IMIDIInput interface.\n     * @param input Implementation of IMIDIInput interface\n     * @returns MIDIValInput object\n     */\n    static fromMIDIInput(input) {\n        return new MIDIValInput_1.MIDIValInput(input);\n    }\n    /**\n     * Creates MIDIValOutput instance from implementation of IMIDIOut interface\n     * @param output Implementation of IMIDIOutput interface\n     * @returns MIDIValOutput object\n     */\n    static fromMIDIOutput(output) {\n        return new MIDIValOutput_1.MIDIValOutput(output);\n    }\n    /**\n     * Connects to MIDI interface and returns implementation of IMIDIAccess\n     * @returns Promise resolving to IMIDIAccess\n     */\n    static connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.setupDeviceWatchers();\n            return this.accessObject;\n        });\n    }\n    static setupDeviceWatchers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isSetupComplete) {\n                return;\n            }\n            this.isSetupComplete = true;\n            if (!this.accessObject) {\n                this.accessObject = new BrowserMIDIAccess_1.BrowserMIDIAccess();\n            }\n            yield this.accessObject.connect();\n        });\n    }\n}\nexports.MIDIVal = MIDIVal;\nMIDIVal.isSetupComplete = false;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MIDIValOutput = exports.MIDIValInput = exports.MIDIVal = void 0;\nconst MIDIval_1 = require(\"./MIDIval\");\nObject.defineProperty(exports, \"MIDIVal\", { enumerable: true, get: function () { return MIDIval_1.MIDIVal; } });\nconst MIDIValInput_1 = require(\"./MIDIValInput\");\nObject.defineProperty(exports, \"MIDIValInput\", { enumerable: true, get: function () { return MIDIValInput_1.MIDIValInput; } });\nconst MIDIValOutput_1 = require(\"./MIDIValOutput\");\nObject.defineProperty(exports, \"MIDIValOutput\", { enumerable: true, get: function () { return MIDIValOutput_1.MIDIValOutput; } });\n"],
  "mappings": "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",
  "names": ["MidiControlChange", "input", "output"]
}
